# define to inherit any missing prompts from the default prompt
inherit_default: False
# Path to default file if inheriting from another custom prompt
default_file: None
# Any divisions in the catalogue
divisions: ["Dicotyledones", "Monocotyledones", "Pteridophyta", "Hepaticae", "Algae"]
# System defines the system prompt to the model
system:
  # Setup defines the model setup prompt. This lets the model know what area of knowledge to focus on for this task
  setup: >
    You are a system that converts botanical text into strictly valid JSON.
  # context defines the context of the task. This includes the input to the model and the description of said input
  # instructions define the step-by-step instructions for the model to follow through
  instructions: |
    Reformat the following botanical text exactly into JSON according to the provided schema.
    Do not generate any extra text, explanations, or markdown formatting. Your output must be a single JSON object with no surrounding commentary or formatting.
    Follow the rules exactly as provided, ensuring that:
      - Only the data from the input is reorganized; do not modify or add any content.
  # rules define the key-value rules for each expected key in the output json dict
  rules:
    familyName: >
      The scientific family name in uppercase. If not available, use "N/A".
    species: >
      A list of dictionaries for each species under the family. Each dictionary should include:
      - speciesName: The full scientific name as written in the text.
      - folderNo: An integer representing the number of folders for that species.
      - folders: A list of dictionaries, each containing:
           - description: A description of the folder contents.

  # schema defines the output json structure
  schema: |
    {
      "familyName": "<extracted family name>", 
      "species": [ 
        {
          "speciesName": "<extracted species name>",
          "folderNo": <extracted number of folders>,
          "folders": [ 
            {
              "description": "<extracted description>"
            }
          ]    
        }
      ]
    }

  examples: 
    - input: |
        ACERACEAE

        Acer campestre L.

        1 folder. Acer campestre [TA]

        Acer pseudoplatanus L.

        2 folders.

        Folder 1. Acer Pseudo-Platanus [G]. i. "Maple. Bulls: [Bulstrode] Park" [JL]

        Folder 2. Acer Pseudo-Platanus [TA].
    - output: |
        {
        "familyName": "ACERACEAE", 
        "species": [ 
            {
              "speciesName": "Acer campestre L.",
              "folderNo": 1,
              "folders": [ 
                    {
                      "description": "Acer campestre [TA]"
                    }
              ]    
            },
            {
              "speciesName": "Acer pseudoplatanus L.",
              "folderNo": 2,
              "folders": [
                    {
                      "description": "Folder 1. Acer Pseudo-Platanus [G]. i. \"Maple. Bulls: [Bulstrode] Park\" [JL]"
                    },
                    {
                      "description": "Folder 2. Acer Pseudo-Platanus [TA]."
                    },
              ]
            }
          ]
        }


# user defines the user input. This can contain more than one prompt. 
# Different prompts will be passed to the model as individual inputs
user:
  # the prompt defines the user's prompt to the model
  text: | 
   Reformat the text below exactly into JSON according to the schema provided.
    Only output the JSON object and nothing else.
  
   Extracted text:
   {extracted_text} 
    
