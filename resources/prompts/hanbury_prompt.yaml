# define to inherit any missing prompts from the default prompt
inherit_default: False
# Path to default file if inheriting from another custom prompt
default_file: None
# Any divisions in the catalogue
divisions: ["Dicotyledones", "Gamopetalae", "MONOCHLAMYDEAE","GYMNOSPERMEAE", "Monocotyledones"]
# System defines the system prompt to the model
system:
  # Setup defines the model setup prompt. This lets the model know what area of knowledge to focus on for this task
  setup: >
    You are a system that converts botanical text into strictly valid JSON.
  # context defines the context of the task. This includes the input to the model and the description of said input
  # instructions define the step-by-step instructions for the model to follow through
  instructions: |
    Reformat the following botanical text **exactly** into JSON according to the provided schema.

    **Strict Output Rules:**
    - The output must be a single **valid JSON object** with no surrounding text, explanations, markdown, or formatting.
    - **Do not generate any extra text** beyond the required JSON structure.
    - **Never introduce extra keys** (e.g., "alpina]" or any unintended variations). Use only the schema-defined keys.
    - **All keys must be quoted properly**.
    - **No trailing commas** should be present.
    - Extract data **as-is** from the input text; do not modify, paraphrase, or infer missing details.

    Output must match the schema structure and follow rules
  # rules define the key-value rules for each expected key in the output json dict
  rules:
    familyName: >
      The scientific family name in uppercase. If not available, use "N/A".
    species: >
      A list of dictionaries for each species under the family. Each dictionary should include:
      - speciesName: The full scientific name as written in the text. Keep the index number infront of the family name.
      - folders: A list of dictionaries denoted by small letter followed by a dot. Example (a. <text>, b. <text>, c. <text>), each containing:
           - description: A description of the folder contents.
      - other: A list of extracted content that does not match the other keys
  # schema defines the output json structure
  schema: |
    {
      "familyName": "<extracted family name>",
      "other": [<extracted other information>],
      "species": [ 
        {
          "speciesName": "<extracted species name>",
          "folders": [ 
            {
              "description": "<extracted description>"
            }
          ]    
        }
      ]
    }

  examples: 
    - input: |
        RANUNCULACEAE.

        1. Aconitum Napellus, L. a. A portion of the plant in flower. Hohneck, Vosges, 13 Aug., 1855. Pie de Sancy, Auvergne, Sept., 1858. b. Plant in flower, with root attached.

        2. Aconitum Lycoctonum, L. a. Plant in flower, with root attached. Hohneck, Vosges, 13 Aug., 1855.

    - output: |
        {
        "familyName": "RANUNCULACEAE", 
        "other": [],
        "species": [ 
            {
              "speciesName": "1. Aconitum Napellus, L.",
              "folders": [ 
                    {
                      "description": "a. A portion of the plant in flower. Hohneck, Vosges, 13 Aug., 1855. Pie de Sancy, Auvergne, Sept., 1858."
                    },
                    {
                      "description": "b. Plant in flower, with root attached."
                    }
              ]    
            },
            {
              "speciesName": "2. Aconitum Lycoctonum, L.",
              "folders": [
                    {
                      "description": "a. Plant in flower, with root attached. Hohneck, Vosges, 13 Aug., 1855."
                    },
              ]
            }
          ]
        }


# user defines the user input. This can contain more than one prompt. 
# Different prompts will be passed to the model as individual inputs
user:
  # the prompt defines the user's prompt to the model
  text: | 
   Reformat the text below exactly into JSON according to the schema provided.
    Only output the JSON object and nothing else.
  
   Extracted text:
   {extracted_text} 
    
